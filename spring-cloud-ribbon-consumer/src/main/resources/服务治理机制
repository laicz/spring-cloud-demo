服务提供者：
    ①：服务注册
        服务提供者在启动的时候，会通过Rest请求的方式将自己本身的一些数据发送到Eureka server上进行注册，
        Eureka Server会将接收到的数据保存在双层结构的Map中，其中第一层的key是服务名，第二层的key是据具体服务的实例名。
    ②：服务同步
        当Eureka server是集群的时候，服务提供者可以将服务注册到不同的Eureka server机器上，由于Eureka server是相互注册的，
        当服务提供者注册到其中的一个Eureka server上，它会将请求转发到其他的注册中心上，从而实现服务的同步
    ③：服务续约
        当服务注册完成以后，服务提供者会维护一个心跳，告送Eureka server我这个服务提供者还活着，防止Eureka server会将这个
        服务实例从服务注册表中进行删除，这个就称之为服务续约
        eureka.instance.lease-renewal-interval-in-seconds=30
        eureka.instance.lease-expiration-duration-in-seconds=90
服务消费者：
    ①：服务发现
        当启动服务消费者，它会发送Rest请求到服务注册中心，来获取在Eureka Server注册中心上注册的服务提供者清单，且这份清单
        是只读的，并30秒进行刷新一次
    ②：服务调用
        服务消费者获取得到服务清单后，通过服务名可以获取到具体的实例名和该实例的具体元数据信息，选择自己需要调用的服务，对于
        访问实例的选择，Eureka中会有region和zone的概念，一个region中可以包含多个zone，进行服务调用时，会优先调用同一个zone的
        服务提供方，如果访问不到，才会访问其他的zone下的服务提供者。
    ③：服务下线
        服务正常关闭的情况下，会向Eureka server注册中心发送一个rest请求，告送注册中心我这个服务提供者要下线了，服务端接收到请求
        后，会将这个事件广播出去，并将状态设置为下线（DOWN）
服务注册中心：
    ①：失效剔除
        当服务实例由于内存溢出、网络故障等原因不能正常运行导致退出，注册中心并没有收到下线通知，eureka server在启动的时候会创建
        一个定时任务，每隔一段时间（默认：60秒）会将清单中超过设定时间（默认：90秒）没有续约的服务剔除出去。
    ②：自我保护
        当Eureka server在运行期间，会统计在15分钟内的心跳连接成功的比率是否超过85%，没有的话会进入到自我保护模式，在这个情况下，
        服务实例不会过期剔除，从而会导致如果服务停止，而调用者并不知道，从而出现调用失败
        在开发调试的情况下很容易出现，因此可以将eureka.server.enable-self-preservation=false